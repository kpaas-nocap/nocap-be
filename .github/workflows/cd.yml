name: NOCAP-BE CD

on:
  workflow_run:
    workflows: ["NOCAP-BE CI"]
    types: [ completed ]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Deploy to EC2 via SSH
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: SSH & deploy container with rollback
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            # 애플리케이션 설정 파일 갱신
            mkdir -p /home/ubuntu/nocap-be/src/main/resources
            cat <<'EOF' > /home/ubuntu/nocap-be/src/main/resources/application.yml
            ${{ secrets.APPLICATION_YML }}
            EOF

            # 현재 latest 이미지를 prev 태그로 백업
            CURR_LATEST_ID=$(docker images -q ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:latest || true)
            if [ -n "$CURR_LATEST_ID" ]; then
              echo "현재 latest 이미지를 prev로 태깅합니다: $CURR_LATEST_ID"
              docker tag ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:latest \
                ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:prev
            fi

            # 새 이미지 pull
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:latest

            # 기존 컨테이너 중지 및 삭제
            docker rm -f nocap-be || true

            # 새 컨테이너 실행 (외부 yml 반영)
            docker run -d \
              --name nocap-be \
              -p 80:8080 \
              -v /home/ubuntu/nocap-be/src/main/resources/application.yml:/app/config/application.yml \
              ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:latest \
              --spring.config.additional-location=file:/app/config/application.yml

            # 새 컨테이너 상태 확인
            sleep 10
            RUNNING=$(docker inspect -f '{{.State.Running}}' nocap-be || echo "false")
            if [ "$RUNNING" != "true" ]; then
              echo "🚨 새 컨테이너 실행 실패 → 롤백 시작"
              docker rm -f nocap-be || true

              # prev 이미지 실행
              docker run -d \
                --name nocap-be \
                -p 80:8080 \
                -v /home/ubuntu/nocap-be/src/main/resources/application.yml:/app/config/application.yml \
                ${{ secrets.DOCKERHUB_USERNAME }}/nocap-be:prev \
                --spring.config.additional-location=file:/app/config/application.yml
            else
              echo "✅ 새 컨테이너 정상 실행됨"
            fi

            # 사용하지 않는 이미지 정리
            docker image prune -af
